knitr::opts_chunk$set(echo = TRUE)
#Ejecute las siguientes tres líneas de código para crear las variables
x = c(1, 2, 4, 7, 9, 0)
y = 4
z = c(0.5, 2, 3, 5, 1, 0)
# Escriba en el siguiente espacio la operación suma entre "x" y "y", y asígnelo a resultado_suma (1 línea de código)
resultado_suma <-
# Escriba en el siguiente espacio la operación multiplicación entre "x" y "z", y asígnelo a resultado_multiplicacion (1 línea de código)
resultado_multiplicacion <-
# Escriba en el siguiente espacio la operación multiplicación negativa a "z", y asígnelo a resultado_negativo (1 línea de código)
resultado_negativo <-
# Escriba en el siguiente espacio la operación de raíz cuadrada "y", y asígnelo a resultado_raiz (1 línea de código)
resultado_raiz <-
# Escriba en el siguiente espacio la operación lógica de igualdad entre "x" y "z", y asígnelo a resultado_igualdad (1 línea de código)
resultado_igualdad <-
# Escriba en el siguiente espacio la operación lógica de diferencia entre "x" y "y", y asígnelo a resultado_igualdad (1 línea de código)
resultado_diferencia <-
# --------------------------- #
# Ahora ejecute las siguientes líneas de código que le permitirán observar los resultados de sus operaciones.
print("Resultado Suma")
resultado_suma
print("Resultado multiplicación")
resultado_multiplicacion
print("Resultado negativo")
resultado_negativo
print("Resultado raíz cuadrada")
resultado_raiz
print("Resultado de operación lógica: igualdad")
resultado_igualdad
print("Resultado de operación lógica: diferencia")
resultado_diferencia
x = c(1, 2, 4, 7, 9, 0)
y = 4
z = c(0.5, 2, 3, 5, 1, 0)
x = c(1, 2, 4, 7, 9, 0)
y = 4
z = c(0.5, 2, 3, 5, 1, 0)
#Ejecute las siguientes tres líneas de código para crear las variables
x = c(1, 2, 4, 7, 9, 0)
y = 4
z = c(0.5, 2, 3, 5, 1, 0)
# Escriba en el siguiente espacio la operación suma entre "x" y "y", y asígnelo a resultado_suma (1 línea de código)
resultado_suma <- x+y
# Escriba en el siguiente espacio la operación multiplicación entre "x" y "z", y asígnelo a resultado_multiplicacion (1 línea de código)
resultado_multiplicacion <- x*z
# Escriba en el siguiente espacio la operación multiplicación negativa a "z", y asígnelo a resultado_negativo (1 línea de código)
resultado_negativo <- -z
# Escriba en el siguiente espacio la operación de raíz cuadrada "y", y asígnelo a resultado_raiz (1 línea de código)
resultado_raiz <- sqrt(y)
# Escriba en el siguiente espacio la operación lógica de igualdad entre "x" y "z", y asígnelo a resultado_igualdad (1 línea de código)
resultado_igualdad <- x==z
# Escriba en el siguiente espacio la operación lógica de diferencia entre "x" y "y", y asígnelo a resultado_igualdad (1 línea de código)
resultado_diferencia <- x!=y
# --------------------------- #
# Ahora ejecute las siguientes líneas de código que le permitirán observar los resultados de sus operaciones.
print("Resultado Suma")
resultado_suma
print("Resultado multiplicación")
resultado_multiplicacion
print("Resultado negativo")
resultado_negativo
print("Resultado raíz cuadrada")
resultado_raiz
print("Resultado de operación lógica: igualdad")
resultado_igualdad
print("Resultado de operación lógica: diferencia")
resultado_diferencia
knitr::opts_chunk$set(echo = TRUE)
#install.packages("tidyverse")
install.packages("nycflights13")
#install.packages("tidyverse")
#install.packages("nycflights13")
#install.packages("xts")
install.packages("PerformanceAnalytics")
anova(reg2,reg1)
data<-read.csv(file.choose())
head(data,3)
D<-year>=1991
data$D<-as.numeric(D)
data[29:36,]
reg1<-lm(log_PIB_Col~D+log_PIB_USA+D*log_PIB_USA,data = data)
reg2<-lm(log_PIB_Col~log_PIB_USA,data=data)
anova(reg2,reg1)
data<-read.csv(file.choose())
attach(data)
D<-year>=1991
data$D<-as.numeric(D)
data[29:36,]
reg1<-lm(log_PIB_Col~D+log_PIB_USA+D*log_PIB_USA,data = data)
reg2<-lm(log_PIB_Col~log_PIB_USA,data=data)
anova(reg2,reg1)
data <- read_excel(file.choose())
library(readxl)
data <- read_excel(file.choose())
knitr::opts_chunk$set(echo = FALSE, warning = FALSE)
library(knitr)
kable(tail(dataProyMunFinal))
library(knitr)
setwd("F:/GitHub/HypnosGateway/DataExploration")
dataProyMun<-readxl::read_xls("ProyeccionMunicipios2005_2020.xls")
kable(dataProyMun[c(1:10),c(1:8)])
dataProyMun2<-dataProyMun[-c(1,2,3),]
#head(dataProyMun2)
colnames(dataProyMun2)<-dataProyMun2[1,]
#head(dataProyMun2)
dataProyMun2<-dataProyMun2[-1,]
dataProyMun3<-dataProyMun2[,-which(colnames(dataProyMun2) %in% c("DP","DPMP"))]
#head(dataProyMun3)
#which(as.numeric(colnames(dataProyMun3))<"2017")
dataProyMun3<-dataProyMun3[,-which(as.numeric(colnames(dataProyMun3))<2017)]
#head(dataProyMun3)
dataProyMun3<-dataProyMun3[,-which(as.numeric(colnames(dataProyMun3))>2017)]
#head(dataProyMun3)
dataProyMunFinal<-dataProyMun3[,-c(4,5)]
kable(head(dataProyMunFinal))
kable(tail(dataProyMunFinal,n = 15))##1124
dataProyMunFinal<-dataProyMunFinal[-c(1124:1135),]
#kable(tail(dataProyMunFinal))
dataProyMunFinal<-dataProyMunFinal[-c(1123),]
kable(tail(dataProyMunFinal))
dataProyMunSinTildes<-dataProyMunFinal
Encoding(dataProyMunSinTildes$DPNOM[1])
dataProyMunSinTildes$DPNOM<-iconv(dataProyMunSinTildes$DPNOM,to="ASCII//TRANSLIT")
dataProyMunSinTildes$MPIO<-iconv(dataProyMunSinTildes$MPIO,to="ASCII//TRANSLIT")
kable(tail(dataProyMunSinTildes))
dataProyMunSinTildes<-dataProyMunFinal
Encoding(dataProyMunSinTildes$DPNOM)
dataProyMunSinTildes$DPNOM<-iconv(dataProyMunSinTildes$DPNOM,to="ASCII//TRANSLIT")
dataProyMunSinTildes$MPIO<-iconv(dataProyMunSinTildes$MPIO,to="ASCII//TRANSLIT")
kable(tail(dataProyMunSinTildes))
dataProyMunSinTildes<-dataProyMunFinal
Encoding(dataProyMunSinTildes$DPNOM)
dataProyMunSinTildes$DPNOM<-iconv(dataProyMunSinTildes$DPNOM,from="UTF-8", to="ASCII//TRANSLIT")
dataProyMunSinTildes$MPIO<-iconv(dataProyMunSinTildes$MPIO,from="UTF-8",to="ASCII//TRANSLIT")
kable(tail(dataProyMunSinTildes))
dataProyMunStand<-dataProyMunFinal
#Eliminar tildes
dataProyMunStand$DPNOM<-iconv(dataProyMunStand$DPNOM,from="UTF-8", to="ASCII//TRANSLIT")
dataProyMunStand$MPIO<-iconv(dataProyMunStand$MPIO,from="UTF-8", to="ASCII//TRANSLIT")
#Eliminar espacios y puntuación
dataProyMunStand$DPNOM<-gsub("\\s|\\.|\\,", '', dataProyMunStand$DPNOM)
dataProyMunStand$MPIO<-gsub("\\s|\\.|\\,", '', dataProyMunStand$MPIO)
#Convertir todo a mayúsculas
dataProyMunStand$DPNOM<-toupper(dataProyMunStand$DPNOM)
dataProyMunStand$MPIO<-toupper(dataProyMunStand$MPIO)
#El DANE toma a Bogotá como otro departamento diferente a Cundinamarca y para efectos de nuestro análisis y el merge con otros datasets deben ser el mismo.
dataProyMunStand$DPNOM<-gsub("BOGOTADC", 'CUNDINAMARCA', dataProyMunStand$DPNOM)
#Eliminar abreviaturas dentro de paréntesis que salen al lado de los nombres. Ejemplo: (CD)
dataProyMunStand$MPIO<-gsub("[:(:]CD[:):]|\\s|[:(:]1[:):]|[:(:]3[:):]|\\.|\\,|[:(:]2[:):]", '', dataProyMunStand$MPIO)
kable(tail(dataProyMunStand))
View(dataProyMunStand)
#Esto quita la coma
#dataPoblacionMunicipios$X2017<-gsub(",", '', dataPoblacionMunicipios$X2017)
class(dataProyMunStand)
#Esto quita la coma
#dataPoblacionMunicipios$X2017<-gsub(",", '', dataPoblacionMunicipios$X2017)
summary(dataProyMunStand)
#Esto quita la coma
#dataPoblacionMunicipios$X2017<-gsub(",", '', dataPoblacionMunicipios$X2017)
def(dataProyMunStand)
#Esto quita la coma
#dataPoblacionMunicipios$X2017<-gsub(",", '', dataPoblacionMunicipios$X2017)
class(dataProyMunStand)
#Esto quita la coma
#dataPoblacionMunicipios$X2017<-gsub(",", '', dataPoblacionMunicipios$X2017)
sapply(dataProyMunStand,class)
summary(dataProyMunStand)
dataHurtoPersonas<-read.csv(file="HurtoANSI.csv",sep=",")
kable(head(dataHurtoPersonas))
kable(head(dataHurtoPersonas[,1:10]))
kable(head(dataHurtoPersonas[,1:10],n = 3))
summary(dataHurtoPersonas$Municipio)
sapply(dataHurtoPersonas, class)
kable(head(dataHurtoPersonas[,1:10],n = 3))
##Esto quita puntos de los nombres de las columnas
colnames(dataHurtoPersonas) <- gsub("\\.", "", colnames(dataHurtoPersonas))
##Esto quita las tildes
colnames(dataHurtoPersonas)<-iconv(colnames(dataHurtoPersonas),from='UTF-8',to="ASCII//TRANSLIT")
kable(head(dataHurtoPersonas[,1:10],n = 3))
View(dataHurtoPersonas)
dataHurtoPersonas<-read.csv(file="HurtoANSI.csv",sep=",")
kable(head(dataHurtoPersonas[,1:10],n = 3))
##Esto quita puntos de los nombres de las columnas
colnames(dataHurtoPersonas) <- gsub("\\.", "", colnames(dataHurtoPersonas))
kable(head(dataHurtoPersonas[,1:10],n = 3))
##Esto quita las tildes
Encoding(colnames(dataHurtoPersonas))
##Esto quita las tildes
colnames(dataHurtoPersonas) <- iconv(colnames(dataHurtoPersonas),from='UTF-8',to="ASCII//TRANSLIT")
kable(head(dataHurtoPersonas[,1:10],n = 3))
dataHurtoPersonas<-read.csv(file="HurtoANSI.csv",sep=",")
##Esto quita puntos de los nombres de las columnas
colnames(dataHurtoPersonas) <- gsub("\\.", "", colnames(dataHurtoPersonas))
##Esto quita las tildes
colnames(dataHurtoPersonas) <- iconv(colnames(dataHurtoPersonas),to="ASCII//TRANSLIT")
kable(head(dataHurtoPersonas[,1:10],n = 3))
summary(mytable)
kable(head(dataHurtoPersonas[,1:10],n = 3))
kable(head(dataHurtoPersonas[,1:10],n = 3))
##Esto quita el CT y espacios del nombre del municipio
dataHurtoPersonas$Municipio<-gsub("\\s|[:(:]CT[:):]|\\.|\\,", '', dataHurtoPersonas$Municipio)
##Esto quita los signos de puntuación y espacios
dataHurtoPersonas$Departamento<-gsub("\\s|\\.|\\,", '', dataHurtoPersonas$Departamento)
##Esto unifica nombres de municipios
dataHurtoPersonas$Municipio<-gsub("PUERTOLEGUIZAMO", 'LEGUIZAMO', dataHurtoPersonas$Municipio)
dataHurtoPersonas$Municipio<-gsub("CHIBOLO", 'CHIVOLO', dataHurtoPersonas$Municipio)
##Esto quita las tildes
dataHurtoPersonas$Municipio<-iconv(dataHurtoPersonas$Municipio,from='UTF-8',to="ASCII//TRANSLIT")
dataHurtoPersonas$Departamento<-iconv(dataHurtoPersonas$Departamento,from='UTF-8',to="ASCII//TRANSLIT")
#Esto pone en mayuscula
dataHurtoPersonas$Departamento<-toupper(dataHurtoPersonas$Departamento)
dataHurtoPersonas$Municipio<-toupper(dataHurtoPersonas$Municipio)
##Esto unifica nombres de departamentos
dataHurtoPersonas$Departamento<-gsub("VALLE", 'VALLEDELCAUCA', dataHurtoPersonas$Departamento)
dataHurtoPersonas$Departamento<-gsub("GUAJIRA", 'LAGUAJIRA', dataHurtoPersonas$Departamento)
dataHurtoPersonas$Departamento<-gsub("SANANDRES", 'ARCHIPIELAGODESANANDRES', dataHurtoPersonas$Departamento)
kable(head(dataHurtoPersonas[,1:10],n = 3))
dataHurtoPersonas<-read.csv(file="HurtoANSI.csv",sep=",")
kable(head(dataHurtoPersonas[,1:10],n = 3))
##Esto quita puntos de los nombres de las columnas
colnames(dataHurtoPersonas) <- gsub("\\.", "", colnames(dataHurtoPersonas))
##Esto quita las tildes
colnames(dataHurtoPersonas) <- iconv(colnames(dataHurtoPersonas),to="ASCII//TRANSLIT")
kable(head(dataHurtoPersonas[,1:10],n = 3))
##Esto quita el CT y espacios del nombre del municipio
dataHurtoPersonas$Municipio<-gsub("\\s|[:(:]CT[:):]|\\.|\\,", '', dataHurtoPersonas$Municipio)
##Esto quita los signos de puntuación y espacios
dataHurtoPersonas$Departamento<-gsub("\\s|\\.|\\,", '', dataHurtoPersonas$Departamento)
##Esto unifica nombres de municipios
dataHurtoPersonas$Municipio<-gsub("PUERTOLEGUIZAMO", 'LEGUIZAMO', dataHurtoPersonas$Municipio)
dataHurtoPersonas$Municipio<-gsub("CHIBOLO", 'CHIVOLO', dataHurtoPersonas$Municipio)
##Esto quita las tildes
dataHurtoPersonas$Municipio<-iconv(dataHurtoPersonas$Municipio,to="ASCII//TRANSLIT")
dataHurtoPersonas$Departamento<-iconv(dataHurtoPersonas$Departamento,from='UTF-8',to="ASCII//TRANSLIT")
#Esto pone en mayuscula
dataHurtoPersonas$Departamento<-toupper(dataHurtoPersonas$Departamento)
dataHurtoPersonas$Municipio<-toupper(dataHurtoPersonas$Municipio)
##Esto unifica nombres de departamentos
dataHurtoPersonas$Departamento<-gsub("VALLE", 'VALLEDELCAUCA', dataHurtoPersonas$Departamento)
dataHurtoPersonas$Departamento<-gsub("GUAJIRA", 'LAGUAJIRA', dataHurtoPersonas$Departamento)
dataHurtoPersonas$Departamento<-gsub("SANANDRES", 'ARCHIPIELAGODESANANDRES', dataHurtoPersonas$Departamento)
kable(head(dataHurtoPersonas[,1:10],n = 3))
View(dataHurtoPersonas)
which(is.na(dataHurtoPersonas$Departamento)==T)
which(is.na(dataHurtoPersonas$Municipio)==T)
dataHurtoPersonas<-read.csv(file="HurtoANSI.csv",sep=",")
kable(head(dataHurtoPersonas[,1:10],n = 3))
##Esto quita puntos de los nombres de las columnas
colnames(dataHurtoPersonas) <- gsub("\\.", "", colnames(dataHurtoPersonas))
##Esto quita las tildes
colnames(dataHurtoPersonas) <- iconv(colnames(dataHurtoPersonas),to="ASCII//TRANSLIT")
kable(head(dataHurtoPersonas[,1:10],n = 3))
##Esto quita el CT y espacios del nombre del municipio
dataHurtoPersonas$Municipio<-gsub("\\s|[:(:]CT[:):]|\\.|\\,", '', dataHurtoPersonas$Municipio)
##Esto quita los signos de puntuación y espacios
dataHurtoPersonas$Departamento<-gsub("\\s|\\.|\\,", '', dataHurtoPersonas$Departamento)
##Esto unifica nombres de municipios
dataHurtoPersonas$Municipio<-gsub("PUERTOLEGUIZAMO", 'LEGUIZAMO', dataHurtoPersonas$Municipio)
dataHurtoPersonas$Municipio<-gsub("CHIBOLO", 'CHIVOLO', dataHurtoPersonas$Municipio)
##Esto quita las tildes
dataHurtoPersonas$Municipio<-iconv(dataHurtoPersonas$Municipio,to="ASCII//TRANSLIT")
dataHurtoPersonas$Departamento<-iconv(dataHurtoPersonas$Departamento,to="ASCII//TRANSLIT")
#Esto pone en mayuscula
dataHurtoPersonas$Departamento<-toupper(dataHurtoPersonas$Departamento)
dataHurtoPersonas$Municipio<-toupper(dataHurtoPersonas$Municipio)
##Esto unifica nombres de departamentos
dataHurtoPersonas$Departamento<-gsub("VALLE", 'VALLEDELCAUCA', dataHurtoPersonas$Departamento)
dataHurtoPersonas$Departamento<-gsub("GUAJIRA", 'LAGUAJIRA', dataHurtoPersonas$Departamento)
dataHurtoPersonas$Departamento<-gsub("SANANDRES", 'ARCHIPIELAGODESANANDRES', dataHurtoPersonas$Departamento)
kable(head(dataHurtoPersonas[,1:10],n = 3))
kable(head(dataHurtoPersonas[,1:10],n = 3))
which(is.na(dataHurtoPersonas$Municipio)==T)
which(is.na(dataHurtoPersonas$Departamento)==T)
kable(head(dataHurtoPersonas[,1:10],n = 3))
dataCaracGen <- read.delim("CaracteristicasGenerales.txt")
head(dataCaracGen)
View(dataCaracGen)
dataCaracGen <- read.delim("CaracteristicasGenerales.txt", sep = " ")
head(dataCaracGen)
View(dataCaracGen)
head(dataVivienda)
dataVivienda <- read.delim("DatosVivienda.txt",sep = " ")
head(dataVivienda)
head(dataCaracGen)
head(dataVivienda)
dataPercepSeg <- read.delm("PercepcionSeguridad.txt",sep = " ")
dataPercepSeg <- read.delim("PercepcionSeguridad.txt",sep = " ")
head(dataPercepSeg)
View(dataPercepSeg)
dataPercepSeg <- read.delim("PercepcionSeguridad.txt",sep = "\t")
head(dataPercepSeg)
View(dataPercepSeg)
head(dataCaracGen)
head(dataVivienda)
head(dataCaracGen)
dataMerged1 = merge(dataCaracGen, dataVivienda, by.x=c("DIRECTORIO", "SECUENCIA_ENCUESTA","SECUENCIA_P","ORDEN"),
by.y=c("DIRECTORIO", "SECUENCIA_ENCUESTA","SECUENCIA_P","ORDEN"))
head(dataMerged1)
head(dataCaracGen)
View(dataCaracGen)
View(dataVivienda)
View(dataMerged1)
head(dataCaracGen)
dataMerged1 = merge(dataCaracGen, dataVivienda, by.x=c("DIRECTORIO", "SECUENCIA_ENCUESTA","SECUENCIA_P","ORDEN","FEX_C"),
by.y=c("DIRECTORIO", "SECUENCIA_ENCUESTA","SECUENCIA_P","ORDEN","FEX_C"))
View(dataMerged1)
dataMerged2 = merge(dataMerged1,dataPercepSeg, by.x=c("DIRECTORIO", "SECUENCIA_ENCUESTA","SECUENCIA_P","ORDEN","FEX_C"),
by.y=c("DIRECTORIO", "SECUENCIA_ENCUESTA","SECUENCIA_P","ORDEN","FEX_C"))
head(dataMerged2)
View(dataMerged2)
dataCaracGen <- read.delim("CaracteristicasGenerales.txt", sep = " ")
#head(dataCaracGen)
dataVivienda <- read.delim("DatosVivienda.txt",sep = " ")
#head(dataVivienda)
dataPercepSeg <- read.delim("PercepcionSeguridad.txt",sep = "\t")
#El separador de este era \t en vez de espacio.
#head(dataPercepSeg)
dataMerged1 = merge(dataCaracGen, dataVivienda, by.x=c("DIRECTORIO", "SECUENCIA_ENCUESTA","SECUENCIA_P","ORDEN","FEX_C"),
by.y=c("DIRECTORIO", "SECUENCIA_ENCUESTA","SECUENCIA_P","ORDEN","FEX_C"))
#head(dataMerged1)
dataMerged2 = merge(dataMerged1,dataPercepSeg, by.x=c("DIRECTORIO", "SECUENCIA_ENCUESTA","SECUENCIA_P","ORDEN","FEX_C"),
by.y=c("DIRECTORIO", "SECUENCIA_ENCUESTA","SECUENCIA_P","ORDEN","FEX_C"))
kable(head(dataMerged2))
dataCaracGen <- read.delim("CaracteristicasGenerales.txt", sep = " ")
#head(dataCaracGen)
dataVivienda <- read.delim("DatosVivienda.txt",sep = " ")
#head(dataVivienda)
dataPercepSeg <- read.delim("PercepcionSeguridad.txt",sep = "\t")
#El separador de este era \t en vez de espacio.
#head(dataPercepSeg)
dataMerged1 = merge(dataCaracGen, dataVivienda, by.x=c("DIRECTORIO", "SECUENCIA_ENCUESTA","SECUENCIA_P","ORDEN","FEX_C"),
by.y=c("DIRECTORIO", "SECUENCIA_ENCUESTA","SECUENCIA_P","ORDEN","FEX_C"))
#head(dataMerged1)
dataMerged2 = merge(dataMerged1,dataPercepSeg, by.x=c("DIRECTORIO", "SECUENCIA_ENCUESTA","SECUENCIA_P","ORDEN","FEX_C"),
by.y=c("DIRECTORIO", "SECUENCIA_ENCUESTA","SECUENCIA_P","ORDEN","FEX_C"))
kable(head(dataMerged2[,1:10]))
head(dataProyMunStand)
sapply(dataProyMunStand,class)
summary(dataProyMunStand)
head(dataHurtoPersonas)
sapply(dataProyMunStand,class)
View(dataProyMunStand)
sapply(dataHurtoPersonas,class)
View(dataHurtoPersonas)
dataHurtoPersonas2 <- dataHurtoPersonas
#Fecha está como Factor y debe ser Date
dataHurtoPersonas2$Fecha<-as.Date(dataHurtoPersonas2$Fecha)
head(dataHurtoPersonas2)
dataHurtoPersonas2 <- dataHurtoPersonas
args(as.Date)
#Fecha está como Factor y debe ser Date
dataHurtoPersonas2$Fecha<-as.Date(dataHurtoPersonas2$Fecha,"%d/%m/%Y")
head(dataHurtoPersonas2)
head(dataHurtoPersonas2[21])
head(dataHurtoPersonas2[21,])
dataHurtoPersonas2 <- dataHurtoPersonas
#Fecha está como Factor y debe ser Date
dataHurtoPersonas2$Fecha<-as.Date(dataHurtoPersonas2$Fecha,"%m/%d/%Y")
head(dataHurtoPersonas2[21,])
head(dataHurtoPersonas2[185099,])
sapply(dataHurtoPersonas,class)
sapply(dataHurtoPersonas,class)
sapply(dataHurtoPersonas2,class)
summary(dataHurtoPersonas2)
sapply(dataHurtoPersonas2,class)
#Departamento y Municipio son character y deben ser factor
dataHurtoPersonas2$Departamento <- as.factor(dataHurtoPersonas2$Departamento)
dataHurtoPersonas2$Municipio<- as.factor(dataHurtoPersonas2$Municipio)
sapply(dataHurtoPersonas2,class)
summary(dataHurtoPersonas2)
sapply(dataHurtoPersonas2,class)
dataHurtoPersonas2$CodigoDANE <- as.factor(dataHurtoPersonas2$CodigoDANE)
sapply(dataHurtoPersonas2,class)
summary(dataHurtoPersonas2)
sapply(dataHurtoPersonas2,class)
summary(dataHurtoPersonas2)
dataHurtoPersonas2$Hora <- substr(dataHurtoPersonas2$Hora,11)
dataHurtoPersonas2$Hora <- substr(dataHurtoPersonas2$Hora,11,22)
sapply(dataHurtoPersonas2,class)
head(dataHurtoPersonas2)
summary(dataHurtoPersonas2)
dataHurtoPersonas2$Hora <- as.factor(substr(dataHurtoPersonas2$Hora,11,22))
sapply(dataHurtoPersonas2,class)
summary(dataHurtoPersonas2)
View(dataHurtoPersonas2)
dataHurtoPersonas2 <- dataHurtoPersonas
#Fecha está como Factor y debe ser Date
dataHurtoPersonas2$Fecha<-as.Date(dataHurtoPersonas2$Fecha,"%m/%d/%Y")
#Departamento y Municipio son character y deben ser factor
dataHurtoPersonas2$Departamento <- as.factor(dataHurtoPersonas2$Departamento)
dataHurtoPersonas2$Municipio<- as.factor(dataHurtoPersonas2$Municipio)
dataHurtoPersonas2$CodigoDANE <- as.factor(dataHurtoPersonas2$CodigoDANE)
dataHurtoPersonas2$Hora <- substr(dataHurtoPersonas2$Hora,11,22)
summary(dataHurtoPersonas2)
View(dataHurtoPersonas2)
dataHurtoPersonas2$Hora <- as.character.factor(substr(dataHurtoPersonas2$Hora,11,22))
summary(dataHurtoPersonas2)
table(dataHurtoPersonas2)
table(dataHurtoPersonas2$Hora)
